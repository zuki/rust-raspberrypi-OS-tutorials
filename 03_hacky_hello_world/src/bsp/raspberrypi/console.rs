// SPDX-License-Identifier: MIT OR Apache-2.0
//
// Copyright (c) 2018-2023 Andre Richter <andre.o.richter@gmail.com>

//! BSPコンソール装置

use crate::console;
use core::fmt;

//--------------------------------------------------------------------------------------------------
// プライベート定義
//--------------------------------------------------------------------------------------------------

/// QEMUの出力を無から生成する神秘的で魔法のような装置
struct QEMUOutput;

//--------------------------------------------------------------------------------------------------
// プライベート定義
//--------------------------------------------------------------------------------------------------

/// `core::fmt::Write`を実装すると`format_args!`マクロが利用可能になる。これはひいては
/// `カーネル`の`print!`と`println!`マクロを実装することになる。`write_str()`を実装する
/// ことにより自動的に`write_fmt()`を手にすることができる。
///
/// [`src/print.rs`]を参照
///
/// [`src/print.rs`]: ../../print/index.html
impl fmt::Write for QEMUOutput {
    fn write_str(&mut self, s: &str) -> fmt::Result {
        for c in s.chars() {
            unsafe {
                core::ptr::write_volatile(0x3F20_1000 as *mut u8, c as u8);
            }
        }

        Ok(())
    }
}

//--------------------------------------------------------------------------------------------------
// パブリックコード
//--------------------------------------------------------------------------------------------------

/// コンソールへの参照を返す
pub fn console() -> impl console::interface::Write {
    QEMUOutput {}
}
